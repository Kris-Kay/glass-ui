/* ================================================== */
/* Space */
@use "sass:map";
@use "breakpoint" as *;
@use "../2-util/z-index" as *;
/* ================================================== */

/* ================================================== */
/* Dynamic T-shirt sizes ‚ú® Config these values */
/* ================================================== */
:root {
  /* 4px */
  --5xs: 0.25rem;

  /* 8px */
  --4xs: 0.5rem;

  /* 12px */
  --3xs: 0.75rem;

  /* 14px */
  --2xs: 0.875rem;

  /* 16px */
  --xs: 1rem;

  /* 16px ‚Üí 24px */
  --sm: clamp(1rem, calc(2vw + 0.5rem), 1.5rem);

  /* 20px ‚Üí 32px */
  --md: clamp(1.25rem, calc(2vw + 0.85rem), 2rem);

  /* 24px ‚Üí 40px */
  --lg: clamp(1.5rem, calc(2vw + 1rem), 2.5rem);

  /* 28px ‚Üí 48px */
  --xl: clamp(1.75rem, calc(2vw + 1.4rem), 3rem);

  /* 32px ‚Üí 56px */
  --2xl: clamp(2rem, calc(2vw + 1.6rem), 3.5rem);

  /* 48px ‚Üí 72px */
  --3xl: clamp(3rem, calc(2vw + 2.6rem), 4.5rem);

  /* 64px ‚Üí 96px */
  --4xl: clamp(4rem, calc(2vw + 3.6rem), 6rem);

  /* 80px ‚Üí 120px */
  --5xl: clamp(5rem, calc(2vw + 4.6rem), 7.5rem);
}

/* T-shirt Size MAP */
/* ================================================== */
/* Update if you add/remove/edit names of fluid sizes above */
$sizes: (
  "5xs": --5xs,
  "4xs": --4xs,
  "3xs": --3xs,
  "2xs": --2xs,
  "xs": --xs,
  "sm": --sm,
  "md": --md,
  "lg": --lg,
  "xl": --xl,
  "2xl": --2xl,
  "3xl": --3xl,
  "4xl": --4xl,
  "5xl": --5xl,
);


/* ================================================== */
/* Responsive spacing/sizing ‚ú® Config these values */
/* ================================================== */
html {
  /* Left-right moat */
  --moat: 1rem;

  /* ui height */
  --ui-h-xs: 1.375rem; /* 22px */
  --ui-h-sm: 1.75rem;  /* 28px */
  --ui-h-md: 2rem;     /* 32px */
  --ui-h-lg: 2.5rem;   /* 40px */
  --ui-h-xl: 3.25rem;  /* 52px */

  @include bp(xs) {
    --ui-h-xs: 1.5rem;/* 24px */
    --ui-h-sm: 2rem;    /* 32px */
    --ui-h-md: 2.25rem; /* 36px */
    --ui-h-lg: 2.75rem; /* 44px */
  }

  @include bp(sm) {
    --moat: 2rem;
  }

  @include bp(md) {
    --moat: 3rem;
  }

  @include bp(lg) {
    // --ui-h-xs: 1.75rem;  /* 28px */
    --ui-h-sm: 2.125rem; /* 34px */
    --ui-h-md: 2.375rem; /* 38px */
    --ui-h-lg: 2.875rem; /* 46px */
    --ui-h-xl: 3.375rem; /* 54px */

    // --ui-h-sm: 2.25rem; /* 36px */
    // --ui-h-md: 2.625rem;/* 42px */
    // --ui-h-lg: 3rem;    /* 48px */
    // --ui-h-xl: 3.5rem;  /* 56px */
  }

  @include bp(xl) {
    --moat: 5rem;
  }
}


/* ================================================== */
/* Moats */
/* ================================================== */
/* ‚ÑπÔ∏è Moats are parent classes that: */
/* ‚Ä¢ give their child/children a left-right gutter that adapts to viewport width */
/* ‚Ä¢ take up 100% width and center their children using grid */
/* ‚Ä¢ add a moat starting from the breakpoint that matches their suffix */
/* This is useful for things like text with a background that should span edge-to-edge on mobile then become a card at larger screen sizes. */

/* üí† example */
// <div class="moat-sm">
//   <div class="w-md"></div>
// </div>

@mixin moat {
  display: grid;
  place-items: center;
}

/* Adds a moat at every screen size */
.moat-all {
  @include moat;
  padding: 0 var(--moat);
}

/* Adds a moat at xs breakpoint and bigger */
.moat-xs {
  @include moat;
  padding: 0;

  @include bp(xs) {
    padding: 0 var(--moat);
  }
}

.moat-sm {
  @include moat;
  padding: 0;

  @include bp(sm) {
    padding: 0 var(--moat);
  }
}

.moat-md {
  @include moat;
  padding: 0;

  @include bp(md) {
    padding: 0 var(--moat);
  }
}

.moat-lg {
  @include moat;
  padding: 0;

  @include bp(lg) {
    padding: 0 var(--moat);
  }
}

.moat-xl {
  @include moat;
  padding: 0;

  @include bp(xl) {
    padding: 0 var(--moat);
  }
}


/* ================================================== */
/* Width */
/* ================================================== */
/* ‚ÑπÔ∏è .w- classes limit the width of elements to their suffix breakpoint */
/* e.g. .w-md takes up 100% width at $bp-sm & won't get bigger than the value of $bp-md */
.w-xs { width: min(100%, $bp-xs); }
.w-sm { width: min(100%, $bp-sm); }
.w-md { width: min(100%, $bp-md); }
.w-lg { width: min(100%, $bp-lg); }
.w-xl { width: min(100%, $bp-xl); }


/* ================================================== */
/* Large spacing */
/* ================================================== */
.page-gap {
  z-index: z(page);
  display: grid;
  gap: 8rem;


  @include bp(xs) {
    gap: 10rem;
  }

  @include bp(sm) {
    gap: 12rem;
  }

  @include bp(md) {
    gap: 14rem;
  }

  @include bp(lg) {
    gap: 16rem;
  }

  @include bp(xl) {
    gap: 18rem;
  }
}

.section-gap {
  z-index: z(section);
  display: grid;
  gap: 5rem;

  @include bp(xs) {
    gap: 8rem;
  }

  @include bp(sm) {
    gap: 9rem;
  }

  @include bp(md) {
    gap: 10rem;
  }

  @include bp(lg) {
    gap: 11rem;
  }

  @include bp(xl) {
    gap: 12rem;
  }
}

/* Edge-to-edge classes */
/* ================================================== */
@mixin e2e {
  --_space: var(--space, 1rem);
  --neg-space: calc(-1 * var(--_space));
  --_neg-space: var(--neg-space, -1rem);

  width: calc(100% + (var(--_space) * 2));
  display: grid;
  margin-left: var(--_neg-space);
  margin-right: var(--_neg-space);
  padding: var(--_space);

  &.p-0 {
    padding: 0;
  }
}

.e2e { @include e2e; }

.e2e-no-t {
  @include e2e;
  margin-top: var(--neg-space);
}

.e2e-no-b {
  @include e2e;
  margin-bottom: var(--neg-space);
}

.e2e-no-y {
  @include e2e;
  margin-top: var(--neg-space);
  margin-bottom: var(--neg-space);
}

.e2e-inset {
  @include e2e;
  margin-left: calc(var(--neg-space) + 1px);
  margin-right: var(--neg-space);
  background-color: var(--inset-bg-deep);
  box-shadow: var(--inset-flat-md);
}

/* Remove margin-left offset at 100vw or bigger */
/* the -16px prevents issues with scrollbars cutting into 100vw */
@container card (width >= calc(100vw - 16px)) {
  .e2e-inset {
    margin-left: var(--neg-space);
  }
}