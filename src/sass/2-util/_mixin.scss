/* ================================================== */
/* Mixins */
@use "../0-design/space" as *;
/* ================================================== */

/* Generic class generating mixin */
/* ================================================== */
@mixin generate-classes($map, $property, $variablePrefix, $classSplit) {
  @each $key, $value in $map {
    &#{$classSplit}#{$key} {
      #{$property}: var(--#{$variablePrefix}-#{$key});
      @content;
    }
  }
}

/* Size modifier mixin */
/* ================================================== */
/* Generates classes using the $sizes map from _space.scss */
@mixin size-modifiers($property) {
  @each $key, $value in $sizes {
    &-#{$key} {
      #{$property}: var($value);
      @content;
    }
  }
}

/* 2 property size modifier mixin */
/* ================================================== */
@mixin xy-size-modifiers($property1, $property2) {
  @each $key, $value in $sizes {
    &-#{$key} {
      #{$property1}: var($value);
      #{$property2}: var($value);
    }
  }
}

/* HSL lightness values */
/* ================================================== */
$lightness: (
  "98",
  "95",
  "90",
  "85",
  "80",
  "70",
  "60",
  "50",
  "40",
  "30",
  "20",
  "15",
  "10",
  "5",
);

/* Color lightness generating mixin */
/* ================================================== */
@mixin generate-color-lightness-classes($map, $property, $variablePrefix, $classSplit) {
  @each $key, $value in $map {
    &#{$classSplit}#{$key} {
      #{$property}: hsla(var(--#{$variablePrefix}-#{$key}));
    }
  }
}

/* Color generating mixin */
/* ================================================== */
// Does not full work! only use to copy vars from public styles.css

// @mixin hsl-values($map, $colorName) {
//   @each $key, $value in $map {
//     #{$colorName}-#{$key}: var(#{$colorName}-h) var(#{$colorName}-s) #{$key};
//   }
// }
// @include hsl-values($lightness, --primary);
// @include hsl-values($lightness, --neutral);